auth_enabled: false

server:
  http_listen_port: 3100
  http_server_read_timeout: 15m
  http_server_write_timeout: 15m

# Note: the compactor as of March 2024 does not compact chunk files
# on cloud storage once they are written. It only compacts the index
# (which is usually very small anyways).
# See https://utcc.utoronto.ca/~cks/space/blog/sysadmin/GrafanaLokiNoChunkCompaction
compactor:
  retention_enabled: true #required for manual deletion -.-

common:
  path_prefix: /loki
  storage:
    gcs:
      bucket_name: bench202403-loki-100streams
#      bucket_name: bench202403-loki-25000streams
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

query_range:
  results_cache:
    cache:
      enable_fifocache: false
      embedded_cache:
        enabled: false
        max_size_mb: 0

# Seems to disable a cache used during queries, but I am not sure
# whether this will be bad during ingestion.
# chunk_store_config:
#   chunk_cache_config:
#     enable_fifocache: false
#     embedded_cache:
#       enabled: false
#       max_size_mb: 0
  

query_scheduler:
  # the TSDB index dispatches many more, but each individually smaller, requests. 
  # We increase the pending request queue sizes to compensate.
  max_outstanding_requests_per_tenant: 32768

querier:
  # Each `querier` component process runs a number of parallel workers to process queries simultaneously.
  # You may want to adjust this up or down depending on your resource usage
  # (more available cpu and memory can tolerate higher values and vice versa),
  # but we find the most success running at around `16` with tsdb
  max_concurrent: 16
  # Default of 1m is not enough for some queries.
  query_timeout: 20m

ingester:
  chunk_encoding: snappy
  max_chunk_age: 24h
  # chunk_idle_period: 2m
  # chunk_retain_period: 2m
  # default: 1572864
  # Leads to 25GBs peak usage during indexing of 25k streams.
  # For 100 streams, the default is fine as it leads to peak mem usage of 5GBs during indexing.
  chunk_target_size: 524288

schema_config:
  configs:
    - from: "2015-12-01"
      store: tsdb
      object_store: gcs
      schema: v12
      index:
        prefix: index_
        period: 24h

# storage_config:
  # # New tsdb-shipper configuration
  # tsdb_shipper:
  #   active_index_directory: /data/tsdb-index
  #   cache_location: /data/tsdb-cache
  #   index_gateway_client:
  #     # only applicable if using microservices where index-gateways are independently deployed.
  #     # This example is using kubernetes-style naming.
  #     server_address: dns:///index-gateway.<namespace>.svc.cluster.local:9095
  #   shared_store: gcs

analytics:
  reporting_enabled: false

ruler:
  alertmanager_url: http://localhost:9093

limits_config:
  # How much back in time we can go in a query.
  max_query_length: 0h # Default: 721h
  unordered_writes: true
  ingestion_rate_mb: 1000
  ingestion_burst_size_mb: 1000
  max_streams_per_user: 0 # unlimited
  max_global_streams_per_user: 1000000
  # 
  # per_stream_rate_limit: 100M # default value 3MB
  # per_stream_rate_limit_burst: 100M # default value 15MB
 
  # max_structured_metadata_size: 1M
  # max_structured_metadata_entries_count: 10000
  
  retention_period: 10y
  reject_old_samples: false
  reject_old_samples_max_age: 10y

  # per_stream_rate_limit: 10240M
  # per_stream_rate_limit_burst: 10240M
  # cardinality_limit: 20000000

